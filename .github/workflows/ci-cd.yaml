name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Node.js (Frontend & Backend)
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Lint Frontend
        working-directory: ./frontend
        run: npm run lint

      - name: Lint Backend
        working-directory: ./backend
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Node.js (Frontend & Backend)
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install Dependencies (Frontend)
        working-directory: ./frontend
        run: npm install

      - name: Install Dependencies (Backend)
        working-directory: ./backend
        run: npm install

      - name: Run Tests (Frontend)
        working-directory: ./frontend
        run: npm test

      - name: Run Tests (Backend)
        working-directory: ./backend
        run: npm test

  # code_quality:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v3

  #     - name: Install SonarQube Scanner
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install sonar-scanner

      # - name: Run SonarQube Analysis (Backend)
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   run: |
      #     sonar-scanner \
      #     -Dsonar.projectKey=backend \
      #     -Dsonar.sources=./backend \
      #     -Dsonar.host.url=https://sonarcloud.io \
      #     -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      # - name: Run SonarQube Analysis (Frontend)
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   run: |
      #     sonar-scanner \
      #     -Dsonar.projectKey=frontend \
      #     -Dsonar.sources=./frontend \
      #     -Dsonar.host.url=https://sonarcloud.io \
      #     -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  build_and_push:
    runs-on: ubuntu-latest
    needs: [lint, test, code_quality]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Backend Docker Image
        working-directory: ./backend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend-app:latest .

      - name: Push Backend Image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/backend-app:latest

      - name: Build Frontend Docker Image
        working-directory: ./frontend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend-app:latest .

      - name: Push Frontend Image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend-app:latest

  deploy_and_run:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Pull MongoDB Image from Docker Hub
        run: |
          docker pull mongo:latest

      - name: Run MongoDB Container
        run: |
          docker run -d --name mongodb -p 27017:27017 mongo:latest

      - name: Run Backend Container
        run: |
          docker run -d --name backend-app --link mongodb:mongo \
          -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/backend-app:latest

      - name: Run Frontend Container
        run: |
          docker run -d --name frontend-app -p 4200:80 ${{ secrets.DOCKER_USERNAME }}/frontend-app:latest
